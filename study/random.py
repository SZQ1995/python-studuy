"""
 本类验证多模块重名问题
"""

#直接执行这句话会报错 因为默认当做是本文件的random
# print(random.randint(-100, 100))
# randint属于random模块的内置方法，不可能存在找不到的情况。
# 之所以出现以上问题的主要原因在于：我们的项目中存在了一个与系统模块同名的模块文件。所以其在引用random模块式，
# 其执行顺序：
# 引入某个模块 => 当前项目中寻找是否有同名的文件 => 如果找到则直接使用，未找到 => 继续向上寻找 => Python解析器中

# 如何证明：模块的引用一定是按照你说的这个顺序呢？
# 使用`__file__`魔术方法
# print(random.__file__)